swagger: "2.0"
info:
  title: "Sample API"
  description: "API for demonstrating Swagger with Flask"
  version: "1.0.0"
host: "http://127.0.0.1:5000"
schemes:
  - "http"
paths:
  /auth/:
    get:
      summary: "Get all or one user"
      description: "Get all users or specific user by ID"
      responses:
        200:
          description: "A successful response"
  /auth/{id}:
    get:
      summary: "Get user by ID"
      description: "Get user details by ID"
      parameters:
        - name: "id"
          in: "path"
          type: "integer"
          required: true
          description: "ID of the user"
      responses:
        200:
          description: "A successful response"
  /auth/create:
    post:
      summary: "Create a new user"
      description: "Create a new user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User details"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
      responses:
        201:
          description: "User created successfully"
  /auth/login:
    post:
      summary: "User login"
      description: "Login to the application"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User credentials"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "Login successful"
  /auth/update/{id}:
    patch:
      summary: "Update user by ID"
      description: "Update user details by ID"
      parameters:
        - name: "id"
          in: "path"
          type: "integer"
          required: true
          description: "ID of the user to update"
        - in: "body"
          name: "body"
          description: "Updated user details"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "User updated successfully"
  /auth/delete/{id}:
    delete:
      summary: "Delete user by ID"
      description: "Delete user by ID"
      parameters:
        - name: "id"
          in: "path"
          type: "integer"
          required: true
          description: "ID of the user to delete"
      responses:
        200:
          description: "User deleted successfully"
